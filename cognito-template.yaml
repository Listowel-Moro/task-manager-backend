AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Task Management System Backend

Resources:
  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MyAppUserPool
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: "Your verification code is {####}"
      EmailVerificationSubject: "Verify your email for our application"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        InviteMessageTemplate:
          EmailSubject: Welcome to Our Application
          EmailMessage: Your username is {username} and temporary password is {####}. Please login to reset your password.
          SMSMessage: Your username is {username} and temporary password is {####}
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
        - Name: name
          AttributeDataType: String
          Required: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MyAppClient
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      AccessTokenValidity: 5
      IdTokenValidity: 5

  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Admins
      UserPoolId: !Ref UserPool
      Description: Group for admin users who can create other users

  MembersGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: member
      UserPoolId: !Ref UserPool
      Description: Group for regular member users

#  ApiGateway:
#    Type: AWS::Serverless::Api
#    Properties:
#      StageName: Prod
#      Cors:
#        AllowMethods: "'GET,POST,OPTIONS'"
#        AllowHeaders: "'Content-Type,Authorization'"
#        AllowOrigin: "'*'"
#      Auth:
#        DefaultAuthorizer: CognitoAuthorizer
#        Authorizers:
#          CognitoAuthorizer:
#            UserPoolArn: !GetAtt UserPool.Arn
#            Identity:
#              Header: Authorization

Outputs:
  UserPoolIdArn:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
  UserPoolClientIdArn:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient
  UserPoolArn:
    Description: Cognito User Pool ARN
    Value: !GetAtt UserPool.Arn
