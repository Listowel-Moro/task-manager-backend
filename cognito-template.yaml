#AWSTemplateFormatVersion: '2010-09-09'
#Transform: AWS::Serverless-2016-10-31
#Description: Task Management System Backend
#
#Parameters:
#  TeamMemberSubscriptionStepFunctionArn:
#    Type: String
#    Description: ARN of the Step Function for team member
#  TaskAssignmentNotificationTopicArn:
#    Type: String
#    Description: ARN of the SNS Topic for task assignment notifications
#
#
#Resources:
#  # Cognito User Pool
#  UserPool:
#    Type: AWS::Cognito::UserPool
#    Properties:
#      UserPoolName: MyAppUserPool
#      AutoVerifiedAttributes:
#        - email
#      EmailVerificationMessage: "Your verification code is {####}"
#      EmailVerificationSubject: "Verify your email for our application"
#      AdminCreateUserConfig:
#        AllowAdminCreateUserOnly: false  # Allow users to sign up themselves
#        InviteMessageTemplate:
#          EmailSubject: Welcome to Our Application
#          EmailMessage: Your username is {username} and temporary password is {####}. Please login to reset your password.
#          SMSMessage: Your username is {username} and temporary password is {####}
#      EmailConfiguration:
#        EmailSendingAccount: COGNITO_DEFAULT
#      Schema:
#        - Name: email
#          AttributeDataType: String
#          Required: true
#        - Name: name
#          AttributeDataType: String
#          Required: false
#      Policies:
#        PasswordPolicy:
#          MinimumLength: 8
#          RequireLowercase: true
#          RequireNumbers: true
#          RequireSymbols: true
#          RequireUppercase: true
#          TemporaryPasswordValidityDays: 7
#
#  UserPoolClient:
#    Type: AWS::Cognito::UserPoolClient
#    Properties:
#      ClientName: MyAppClient
#      UserPoolId: !Ref UserPool
#      GenerateSecret: false
#      ExplicitAuthFlows:
#        - ALLOW_USER_PASSWORD_AUTH
#        - ALLOW_REFRESH_TOKEN_AUTH
#      AccessTokenValidity: 5
#      IdTokenValidity: 5
#
#
#  AdminUserGroup:
#    Type: AWS::Cognito::UserPoolGroup
#    Properties:
#      GroupName: Admins
#      UserPoolId: !Ref UserPool
#      Description: Group for admin users who can create other users
#
#  MembersGroup:
#    Type: AWS::Cognito::UserPoolGroup
#    Properties:
#      GroupName: member
#      UserPoolId: !Ref UserPool
#      Description: Group for admin users who can create other users
#
#  ApiGateway:
#    Type: AWS::Serverless::Api
#    Properties:
#      StageName: Prod
#      Cors:
#        AllowMethods: "'GET,POST,OPTIONS'"
#        AllowHeaders: "'Content-Type,Authorization'"
#        AllowOrigin: "'*'"
#      Auth:
#        DefaultAuthorizer: CognitoAuthorizer
#        Authorizers:
#          CognitoAuthorizer:
#            UserPoolArn: !GetAtt UserPool.Arn
#            Identity:
#              Header: Authorization
#
#
#
#
#  # Lambda Functions
#  SignUpFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: SignUpFunction
#      CodeUri: TaskManager/
#      Handler: com.amalitechtaskmanager.handlers.auth.SignUpHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:SignUp
#                - cognito-idp:AdminConfirmSignUp
#                - cognito-idp:AdminAddUserToGroup  # Added this permission
#                - cognito-idp:AdminUpdateUserAttributes
##              Resource: !GetAtt UserPool.Arn
#              Resource: !Sub 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}'
#      Environment:
#        Variables:
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#          USER_POOL_ID: !Ref UserPool
#      Events:
#        SignUpApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /signup
#            Method: POST
#            Auth:
#              Authorizer: NONE
#
#
#  SignInFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: SignInFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.SignInHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:InitiateAuth
#                - cognito-idp:AdminGetUser
#              Resource: !GetAtt UserPool.Arn
#      Environment:
#        Variables:
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#          USER_POOL_ID: !Ref UserPool
#      Events:
#        SignInApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /signin
#            Method: POST
#            Auth:
#              Authorizer: NONE
#
#  AdminCreateMemberFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: AdminCreateMemberFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.AdminCreateMemberHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:AdminCreateUser
#                - cognito-idp:AdminAddUserToGroup
#              Resource: !GetAtt UserPool.Arn
#            - Effect: Allow
#              Action:
#                - sns:Publish
#              Resource: !Ref TaskAssignmentNotificationTopicArn
#            - Effect: Allow
#              Action:
#                - states:StartExecution
#              Resource: !Ref TeamMemberSubscriptionStepFunctionArn
#      Environment:
#        Variables:
#          USER_POOL_ID: !Ref UserPool
#          TASK_ASSIGNMENT_TOPIC_ARN: !Ref TaskAssignmentNotificationTopicArn
#          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN: !Ref TeamMemberSubscriptionStepFunctionArn
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#      Events:
#        AdminCreateMemberApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /admin/create-member
#            Method: POST
#            Auth:
#              Authorizer: CognitoAuthorizer
#
#  ForgotPasswordFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: ForgotPasswordFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.ForgotPasswordHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:ForgotPassword
#              Resource: "*"
#      Environment:
#        Variables:
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#      Events:
#        ForgotPasswordApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /forgot-password
#            Method: POST
#            Auth:
#              Authorizer: NONE
#
#  ConfirmForgotPasswordFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: ConfirmForgotPasswordFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.ConfirmForgotPasswordHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:ConfirmForgotPassword
#              Resource: "*"
#      Environment:
#        Variables:
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#      Events:
#        ConfirmForgotPasswordApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /confirm-forgot-password
#            Method: POST
#            Auth:
#              Authorizer: NONE
#
#  SignOutFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: SignOutFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.SignOutHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:GlobalSignOut
#              Resource: !GetAtt UserPool.Arn
#      Environment:
#        Variables:
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#      Events:
#        SignOutApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /signout
#            Method: POST
#            Auth:
#              Authorizer: CognitoAuthorizer
#
#  RefreshTokenFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: RefreshTokenFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.TokenRefreshHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:InitiateAuth
#              Resource: !GetAtt UserPool.Arn
#      Environment:
#        Variables:
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#      Events:
#        RefreshTokenApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /refresh-token
#            Method: POST
#            Auth:
#              Authorizer: NONE
#
#  ChangePasswordFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: ChangePasswordFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.ChangePasswordHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:ChangePassword
#              Resource: "*"
#      Environment:
#        Variables:
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#      Events:
#        ChangePasswordApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /change-password
#            Method: POST
#            Auth:
#              Authorizer: CognitoAuthorizer
#
#
#  VerifyEmailFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: VerifyEmailFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.VerifyEmailHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:ConfirmSignUp
#              Resource: "*"
#            - Effect: Allow
#              Action:
#                - states:StartExecution
#              Resource: !Ref TeamMemberSubscriptionStepFunctionArn
#      Environment:
#        Variables:
#          USER_POOL_ID: !Ref UserPool
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN: !Ref TeamMemberSubscriptionStepFunctionArn
#      Events:
#        VerifyEmailApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /verify-email
#            Method: POST
#            Auth:
#              Authorizer: NONE
#
#  ResendVerificationCodeFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: ResendVerificationCodeFunction
#      CodeUri: TaskManager
#      Handler: com.amalitechtaskmanager.handlers.auth.ResendVerificationCodeHandler::handleRequest
#      Runtime: java21
#      MemorySize: 512
#      Timeout: 30
#      Policies:
#        - Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - cognito-idp:ResendConfirmationCode
#              Resource: "*"
#      Environment:
#        Variables:
#          USER_POOL_ID: !Ref UserPool
#          USER_POOL_CLIENT_ID: !Ref UserPoolClient
#      Events:
#        ResendVerificationCodeApi:
#          Type: Api
#          Properties:
#            RestApiId: !Ref ApiGateway
#            Path: /resend-verification-code
#            Method: POST
#            Auth:
#              Authorizer: NONE
#
#
#Outputs:
#  ApiUrl:
#    Description: API Gateway endpoint URL
#    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
#  UserPoolId:
#    Description: Cognito User Pool ID
#    Value: !Ref UserPool
#  UserPoolClientId:
#    Description: Cognito User Pool Client ID
#    Value: !Ref UserPoolClient
#  UserPoolArn:
#    Description: Cognito User Pool ARN
#    Value: !GetAtt UserPool.Arn
#
#  ResendVerificationCodeFunctionArn:
#    Description: ARN of the Resend Verification Code Function
#    Value: !GetAtt ResendVerificationCodeFunction.Arn
#
#  VerifyEmailFunctionArn:
#    Description: ARN of the Verify Email Function
#    Value: !GetAtt VerifyEmailFunction.Arn
#

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Task Management System Backend

Parameters:
  TeamMemberSubscriptionStepFunctionArn:
    Type: String
    Description: ARN of the Step Function for team member
  TaskAssignmentNotificationTopicArn:
    Type: String
    Description: ARN of the SNS Topic for task assignment notifications

Resources:
  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MyAppUserPool
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: "Your verification code is {####}"
      EmailVerificationSubject: "Verify your email for our application"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true  # Changed to true for admin-only creation
        InviteMessageTemplate:
          EmailSubject: Welcome to Our Application
          EmailMessage: Your username is {username} and temporary password is {####}. Please login to reset your password.
          SMSMessage: Your username is {username} and temporary password is {####}
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
        - Name: name
          AttributeDataType: String
          Required: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MyAppClient
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      AccessTokenValidity: 5
      IdTokenValidity: 5

  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Admins
      UserPoolId: !Ref UserPool
      Description: Group for admin users who can create other users

  MembersGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: member
      UserPoolId: !Ref UserPool
      Description: Group for regular member users

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt UserPool.Arn
            Identity:
              Header: Authorization

  # Lambda Functions
  SignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SignUpFunction
      CodeUri: TaskManager/
      Handler: com.amalitechtaskmanager.handlers.auth.SignUpHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:SignUp
                - cognito-idp:AdminConfirmSignUp
                - cognito-idp:AdminAddUserToGroup
                - cognito-idp:AdminUpdateUserAttributes
              Resource: !Sub 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}'
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
          USER_POOL_ID: !Ref UserPool
      Events:
        SignUpApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /signup
            Method: POST
            Auth:
              Authorizer: NONE

  SignInFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SignInFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.SignInHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:InitiateAuth
                - cognito-idp:AdminGetUser
                - cognito-idp:AdminListGroupsForUser
                - cognito-idp:RespondToAuthChallenge
                - cognito-idp:AdminUpdateUserAttributes
              Resource: !GetAtt UserPool.Arn
            - Effect: Allow
              Action:
                - states:StartExecution
              Resource: !Ref TeamMemberSubscriptionStepFunctionArn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
          USER_POOL_ID: !Ref UserPool
          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN: !Ref TeamMemberSubscriptionStepFunctionArn
      Events:
        SignInApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /signin
            Method: POST
            Auth:
              Authorizer: NONE

  AdminCreateMemberFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AdminCreateMemberFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.AdminCreateMemberHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminCreateUser
                - cognito-idp:AdminAddUserToGroup
                - cognito-idp:AdminUpdateUserAttributes  # Added for verification email
                - cognito-idp:AdminGetUser
                - cognito-idp:AdminGetUser
                - cognito-idp:AdminSetUserPassword  # Add this permission
                - cognito-idp:AdminInitiateAuth     # Also add this for the auth flow
                - cognito-idp:ResendConfirmationCode # And this for verification code
#              Resource: !GetAtt UserPool.Arn
#              Resource: !Sub 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}'
              Resource: "arn:aws:cognito-idp:eu-central-1:888577065142:userpool/*"
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref TaskAssignmentNotificationTopicArn
            - Effect: Allow
              Action:
                - states:StartExecution
              Resource: !Ref TeamMemberSubscriptionStepFunctionArn
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPool
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
          TASK_ASSIGNMENT_TOPIC_ARN: !Ref TaskAssignmentNotificationTopicArn
          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN: !Ref TeamMemberSubscriptionStepFunctionArn
      Events:
        AdminCreateMemberApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /admin/create-member
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  ForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ForgotPasswordFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.ForgotPasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:ForgotPassword
              Resource: "*"
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        ForgotPasswordApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /forgot-password
            Method: POST
            Auth:
              Authorizer: NONE

  ConfirmForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ConfirmForgotPasswordFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.ConfirmForgotPasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:ConfirmForgotPassword
              Resource: "*"
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        ConfirmForgotPasswordApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /confirm-forgot-password
            Method: POST
            Auth:
              Authorizer: NONE

  SignOutFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SignOutFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.SignOutHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:GlobalSignOut
              Resource: !GetAtt UserPool.Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        SignOutApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /signout
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  RefreshTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RefreshTokenFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.TokenRefreshHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:InitiateAuth
              Resource: !GetAtt UserPool.Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        RefreshTokenApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /refresh-token
            Method: POST
            Auth:
              Authorizer: NONE

  ChangePasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ChangePasswordFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.ChangePasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:ChangePassword
              Resource: "*"
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        ChangePasswordApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /change-password
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  VerifyEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VerifyEmailFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.VerifyEmailHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:ConfirmSignUp
              Resource: "*"
            - Effect: Allow
              Action:
                - states:StartExecution
              Resource: !Ref TeamMemberSubscriptionStepFunctionArn
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPool
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN: !Ref TeamMemberSubscriptionStepFunctionArn
      Events:
        VerifyEmailApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /verify-email
            Method: POST
            Auth:
              Authorizer: NONE

  ResendTempPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ResendTempPasswordFunction
      CodeUri: TaskManager
      Handler: com.amalitechtaskmanager.handlers.auth.ResendTempPasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
                - cognito-idp:AdminSetUserPassword
                - cognito-idp:GetUser
                - cognito-idp:AdminListGroupsForUser
              Resource: "*"
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPool
          USER_POOL_CLIENT_ID: !Ref UserPoolClient
      Events:
        ResendTempPasswordApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /admin/resend-temp-password
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient
  UserPoolArn:
    Description: Cognito User Pool ARN
    Value: !GetAtt UserPool.Arn
  ResendVerificationCodeFunctionArn:
    Description: ARN of the Resend Verification Code Function
    Value: !GetAtt ResendVerificationCodeFunction.Arn
  VerifyEmailFunctionArn:
    Description: ARN of the Verify Email Function
    Value: !GetAtt VerifyEmailFunction.Arn
