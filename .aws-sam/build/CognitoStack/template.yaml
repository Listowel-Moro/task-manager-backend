AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Task Management System Backend
Parameters:
  TeamMemberSubscriptionStepFunctionArn:
    Type: String
    Description: ARN of the Step Function for team member
  TaskAssignmentNotificationTopicArn:
    Type: String
    Description: ARN of the SNS Topic for task assignment notifications
Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MyAppUserPool
      AutoVerifiedAttributes:
      - email
      EmailVerificationMessage: Your verification code is {####}
      EmailVerificationSubject: Verify your email for our application
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        InviteMessageTemplate:
          EmailSubject: Welcome to Our Application
          EmailMessage: Your username is {username} and temporary password is {####}.
            Please login to reset your password.
          SMSMessage: Your username is {username} and temporary password is {####}
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Schema:
      - Name: email
        AttributeDataType: String
        Required: true
      - Name: name
        AttributeDataType: String
        Required: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MyAppClient
      UserPoolId:
        Ref: UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      AccessTokenValidity: 5
      IdTokenValidity: 5
  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Admins
      UserPoolId:
        Ref: UserPool
      Description: Group for admin users who can create other users
  MembersGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: member
      UserPoolId:
        Ref: UserPool
      Description: Group for regular member users
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: '''GET,POST,OPTIONS'''
        AllowHeaders: '''Content-Type,Authorization'''
        AllowOrigin: '''*'''
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn:
              Fn::GetAtt:
              - UserPool
              - Arn
            Identity:
              Header: Authorization
  SignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SignUpFunction
      CodeUri: SignUpFunction
      Handler: com.amalitechtaskmanager.handlers.auth.SignUpHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:SignUp
          - cognito-idp:AdminConfirmSignUp
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminUpdateUserAttributes
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
          USER_POOL_ID:
            Ref: UserPool
      Events:
        SignUpApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /signup
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: SignUpFunction
  SignInFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SignInFunction
      CodeUri: SignInFunction
      Handler: com.amalitechtaskmanager.handlers.auth.SignInHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:InitiateAuth
          - cognito-idp:AdminGetUser
          - cognito-idp:AdminListGroupsForUser
          - cognito-idp:RespondToAuthChallenge
          - cognito-idp:AdminUpdateUserAttributes
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
        - Effect: Allow
          Action:
          - states:StartExecution
          Resource:
            Ref: TeamMemberSubscriptionStepFunctionArn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
          USER_POOL_ID:
            Ref: UserPool
          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN:
            Ref: TeamMemberSubscriptionStepFunctionArn
      Events:
        SignInApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /signin
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: SignInFunction
  AdminCreateMemberFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AdminCreateMemberFunction
      CodeUri: AdminCreateMemberFunction
      Handler: com.amalitechtaskmanager.handlers.auth.AdminCreateMemberHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminUpdateUserAttributes
          - cognito-idp:AdminGetUser
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:AdminInitiateAuth
          - cognito-idp:ResendConfirmationCode
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
        - Effect: Allow
          Action:
          - sns:Publish
          Resource:
            Ref: TaskAssignmentNotificationTopicArn
        - Effect: Allow
          Action:
          - states:StartExecution
          Resource:
            Ref: TeamMemberSubscriptionStepFunctionArn
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: UserPool
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
          TASK_ASSIGNMENT_TOPIC_ARN:
            Ref: TaskAssignmentNotificationTopicArn
          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN:
            Ref: TeamMemberSubscriptionStepFunctionArn
      Events:
        AdminCreateMemberApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /admin/create-member
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
    Metadata:
      SamResourceId: AdminCreateMemberFunction
  ForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ForgotPasswordFunction
      CodeUri: ForgotPasswordFunction
      Handler: com.amalitechtaskmanager.handlers.auth.ForgotPasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:ForgotPassword
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
      Events:
        ForgotPasswordApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /forgot-password
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: ForgotPasswordFunction
  ConfirmForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ConfirmForgotPasswordFunction
      CodeUri: ConfirmForgotPasswordFunction
      Handler: com.amalitechtaskmanager.handlers.auth.ConfirmForgotPasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:ConfirmForgotPassword
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
      Events:
        ConfirmForgotPasswordApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /confirm-forgot-password
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: ConfirmForgotPasswordFunction
  SignOutFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SignOutFunction
      CodeUri: SignOutFunction
      Handler: com.amalitechtaskmanager.handlers.auth.SignOutHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:GlobalSignOut
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
      Events:
        SignOutApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /signout
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
    Metadata:
      SamResourceId: SignOutFunction
  RefreshTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RefreshTokenFunction
      CodeUri: RefreshTokenFunction
      Handler: com.amalitechtaskmanager.handlers.auth.TokenRefreshHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:InitiateAuth
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
      Events:
        RefreshTokenApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /refresh-token
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: RefreshTokenFunction
  ChangePasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ChangePasswordFunction
      CodeUri: ChangePasswordFunction
      Handler: com.amalitechtaskmanager.handlers.auth.ChangePasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:ChangePassword
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
      Environment:
        Variables:
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
      Events:
        ChangePasswordApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /change-password
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
    Metadata:
      SamResourceId: ChangePasswordFunction
  VerifyEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VerifyEmailFunction
      CodeUri: VerifyEmailFunction
      Handler: com.amalitechtaskmanager.handlers.auth.VerifyEmailHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:ConfirmSignUp
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
        - Effect: Allow
          Action:
          - states:StartExecution
          Resource:
            Ref: TeamMemberSubscriptionStepFunctionArn
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: UserPool
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
          TEAM_MEMBER_SUBSCRIPTION_STEP_FUNCTION_ARN:
            Ref: TeamMemberSubscriptionStepFunctionArn
      Events:
        VerifyEmailApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /verify-email
            Method: POST
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: VerifyEmailFunction
  ResendTempPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ResendTempPasswordFunction
      CodeUri: ResendTempPasswordFunction
      Handler: com.amalitechtaskmanager.handlers.auth.ResendTempPasswordHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - cognito-idp:AdminGetUser
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:GetUser
          - cognito-idp:AdminListGroupsForUser
          Resource:
            Fn::GetAtt:
            - UserPool
            - Arn
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: UserPool
          USER_POOL_CLIENT_ID:
            Ref: UserPoolClient
      Events:
        ResendTempPasswordApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /admin/resend-temp-password
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
    Metadata:
      SamResourceId: ResendTempPasswordFunction
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  UserPoolId:
    Description: Cognito User Pool ID
    Value:
      Ref: UserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value:
      Ref: UserPoolClient
  UserPoolArn:
    Description: Cognito User Pool ARN
    Value:
      Fn::GetAtt:
      - UserPool
      - Arn
  ResendTempPasswordFunctionArn:
    Description: ARN of the Resend Verification Code Function
    Value:
      Fn::GetAtt:
      - ResendTempPasswordFunction
      - Arn
  VerifyEmailFunctionArn:
    Description: ARN of the Verify Email Function
    Value:
      Fn::GetAtt:
      - VerifyEmailFunction
      - Arn
